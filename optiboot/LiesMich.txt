Autor: Karl-Heinz Kübbeler   (kh_kuebbeler@web.de) , Mai 2016, Dez 2017, Jun 2020

Dies ist die Assembler-Version von dem Bootloader optiboot
mit erweiterten Fähigkeiten:

Kann den Flash Speicher und auch das EEprom beschreiben.

Die Anpassung an unterschiedliche Programmlänge wird automatisch berücksichtigt.
So braucht man bei den beim make Aufruf gewählten Sonderfunktionen und
damit geänderter Programmlänge nicht um die Änderung der Fuse-Einstellung zu kümmern,
wenn man mit dem ISP=1 Parameter beim make Aufruf den bootloader zum AVR transferiert.

Kann sowohl ein UART des AVR benutzen oder auch per Software simulieren.
Mit der Software-Lösung sind die Tx und Rx Zuordnung zu den AVR-Pins frei wählbar.
Die unterschiedliche Zugriffszeit auf die Ports wird dabei berücksichtigt.

Unterstützt eine Baudratenmessung und eine daraus automatisch gewählte Baudrate
für die serielle Kommunikation mit dem PC.

Kann auf AVRs installiert werden, die keine Hardware Bootloader Unterstützung haben.
Dabei werden 2 Interrupt-Vektoren von jedem Anwenderprogramm verändert!
Eine Programm Verifikation ist normalerweise trotzdem möglich,
weil die Modifikationsdaten in den letzten Bytes des EEprom gesichert werden.

Kann mit nur einem AVR-Pin arbeiten für TX und Rx, wenn Software-UART benutzt wird.
Dafür muß eine spezielle Hardware benutzt werden, die das Echo für den Sender (avrdude) 
unterdrückt.
Näheres und einen Schaltungsvorschlag findet man in der
PDF Dokumentation (../Documentation/german/bootloader.pdf).
Die Zwischen-Elektronik ist nur erforderlich damit das Ansteuerprogramm
avrdude läuft. Der Bootloader braucht keine Zwischenelektronik.

Für alle unterstützten Prozessoren wird eine lauffähige Standard-Konfiguration
gewählt. Die gewählten Eigenschaften kann man auf dem Terminal-Protokoll sehen.
Die Eigenschaften kann man über Parameter beim make Aufruf ändern.
Wichtige Einstellungen kann man sowohl auf dem Erstellungs-Protokoll auf
dem Bildschirm lesen und auch am Ende der .lst Datei.

Normalerweise läuft die Bildung des optiboot Bootloader auf einem Linux-System.
Mit Hilfe des Cygwin64 Pakets sind die Makefiles auch auf Windows10 benutzbar.
Siehe dazu auch help_files/Windows_benutzung.txt .

Wahlweise kann man statt dem Assembler-Programm auch ein C-Programm für
die Bildung des optiboot-Bootloaders benutzen. Dabei wird der Bootloader größer
und braucht in der Regel mehr Bootloader-Speicherseiten. Aber es sind die
meisten Funktionen auch mit dem C-Programm wählbar.
In aller Regel ist aber die Assembler-Version besser getestet und sollte
bevorzugt werden.


Die Kurzbeschreibung Benutzung.txt sowie weiter hilfreiche Texte findet man nun
im Unterverzeichnis help_files.


Liste der unterstützten AVR-Prozessoren:
========================================
ATmega8/16/32/64/128
ATmega162/163
ATmega164/324/644/1284 (P)
ATmega48/88/168/328  (P)
ATmega165/325/3250/6450
ATmega169/329/649/6490
ATmega640/1280/1281/2560/2561
AT90CAN32/64/128
AT90PWM2/3 (B)
ATtiny84/841/861/4413/44/441/461/2313/24/85/87/45/88/48/167/1634
ATmega16u4/32u4
ATmega8u2/16u2/32u2

An Rückmeldungen zum Thema "Assembler Optiboot" wäre ich durchaus interessiert.
Übrigens werden die Namen der wichtigsten Parameter beim Aufruf von make oder "make help"
angezeigt!
