\BOOKMARK [0][-]{chapter.1}{Principle function of a boot-loader}{}% 1
\BOOKMARK [0][-]{chapter.2}{The Hardware of the AVR 8-bit micro controllers}{}% 2
\BOOKMARK [1][-]{section.2.1}{CPU and memory access}{chapter.2}% 3
\BOOKMARK [1][-]{section.2.2}{Input and Output function}{chapter.2}% 4
\BOOKMARK [1][-]{section.2.3}{The start of AVR micro-controllers}{chapter.2}% 5
\BOOKMARK [1][-]{section.2.4}{Writing to the AVR memories}{chapter.2}% 6
\BOOKMARK [2][-]{subsection.2.4.1}{Parallel programming}{section.2.4}% 7
\BOOKMARK [2][-]{subsection.2.4.2}{serial download with ISP}{section.2.4}% 8
\BOOKMARK [2][-]{subsection.2.4.3}{Self programming with serial interface}{section.2.4}% 9
\BOOKMARK [2][-]{subsection.2.4.4}{Diagnostic Tools}{section.2.4}% 10
\BOOKMARK [0][-]{chapter.3}{The optiboot boot-loader for AVR Micro-controllers}{}% 11
\BOOKMARK [1][-]{section.3.1}{Changes and enhancements to the version 6.2}{chapter.3}% 12
\BOOKMARK [1][-]{section.3.2}{Features of the optiboot Assembler version}{chapter.3}% 13
\BOOKMARK [1][-]{section.3.3}{Automatic size adaption in the optiboot Makefile}{chapter.3}% 14
\BOOKMARK [1][-]{section.3.4}{target selection for the optiboot Makefile}{chapter.3}% 15
\BOOKMARK [1][-]{section.3.5}{The Options for the optiboot Makefile}{chapter.3}% 16
\BOOKMARK [1][-]{section.3.6}{Usage of optiboot without a boot-loader area}{chapter.3}% 17
\BOOKMARK [1][-]{section.3.7}{Capabilities of the serial interface with the applied software}{chapter.3}% 18
\BOOKMARK [2][-]{subsection.3.7.1}{Computing of the delay time}{section.3.7}% 19
\BOOKMARK [2][-]{subsection.3.7.2}{Using more than one serial interface}{section.3.7}% 20
\BOOKMARK [2][-]{subsection.3.7.3}{Serial Input and Output with only one AVR Pin}{section.3.7}% 21
\BOOKMARK [2][-]{subsection.3.7.4}{Use of the automatic baud rate detection}{section.3.7}% 22
\BOOKMARK [2][-]{subsection.3.7.5}{Special features of the serial interface}{section.3.7}% 23
\BOOKMARK [1][-]{section.3.8}{Some examples of building a optiboot bootloader}{chapter.3}% 24
\BOOKMARK [1][-]{section.3.9}{Clock Frequency Correction of the internal RC-Generator}{chapter.3}% 25
\BOOKMARK [2][-]{subsection.3.9.1}{RC-generators check of the ATmega8}{section.3.9}% 26
\BOOKMARK [2][-]{subsection.3.9.2}{RC-Generators check of the ATmega8535}{section.3.9}% 27
\BOOKMARK [2][-]{subsection.3.9.3}{RC-Generators check of the ATmega8515 and the ATmega162}{section.3.9}% 28
\BOOKMARK [2][-]{subsection.3.9.4}{RC-Generators check of the ATmega328 family}{section.3.9}% 29
\BOOKMARK [2][-]{subsection.3.9.5}{RC-Generators check of the ATmega32 / 16}{section.3.9}% 30
\BOOKMARK [2][-]{subsection.3.9.6}{RC-Generator check of the ATmega163L}{section.3.9}% 31
\BOOKMARK [2][-]{subsection.3.9.7}{RC-Generator check of the ATmega64 / 128}{section.3.9}% 32
\BOOKMARK [2][-]{subsection.3.9.8}{RC-Generator check of the ATmega644 family}{section.3.9}% 33
\BOOKMARK [2][-]{subsection.3.9.9}{RC-Generator check of the ATmega645 family}{section.3.9}% 34
\BOOKMARK [2][-]{subsection.3.9.10}{RC-Generator check of the ATmega649 family}{section.3.9}% 35
\BOOKMARK [2][-]{subsection.3.9.11}{RC-Generator check of the ATmega2560 family}{section.3.9}% 36
\BOOKMARK [2][-]{subsection.3.9.12}{RC-Generator check of the ATtiny4313 family}{section.3.9}% 37
\BOOKMARK [2][-]{subsection.3.9.13}{RC-Generator check of the ATtiny84 family}{section.3.9}% 38
\BOOKMARK [2][-]{subsection.3.9.14}{RC-Generators check of the ATtiny85 family}{section.3.9}% 39
\BOOKMARK [2][-]{subsection.3.9.15}{RC-Generators check of the ATtiny841 family}{section.3.9}% 40
\BOOKMARK [2][-]{subsection.3.9.16}{RC-Generators check of the ATtiny861 family}{section.3.9}% 41
\BOOKMARK [2][-]{subsection.3.9.17}{RC-Generators check of the ATtiny87 family}{section.3.9}% 42
\BOOKMARK [2][-]{subsection.3.9.18}{RC-Generators check of the ATtiny88 family}{section.3.9}% 43
\BOOKMARK [2][-]{subsection.3.9.19}{RC-Generator check of the ATtiny1634}{section.3.9}% 44
\BOOKMARK [2][-]{subsection.3.9.20}{RC-Generators check of the AT90PWM family}{section.3.9}% 45
\BOOKMARK [2][-]{subsection.3.9.21}{RC-Generators check of the AT90CAN family}{section.3.9}% 46
\BOOKMARK [1][-]{section.3.10}{Examination of the cooperation with USB-serial converters}{chapter.3}% 47
\BOOKMARK [2][-]{subsection.3.10.1}{Preface to the test environment}{section.3.10}% 48
\BOOKMARK [2][-]{subsection.3.10.2}{Autobaud measurements with different USB-Serial chips}{section.3.10}% 49
\BOOKMARK [2][-]{subsection.3.10.3}{Measurement of USB-serial converters mit fixed optiboot baud rate}{section.3.10}% 50
\BOOKMARK [2][-]{subsection.3.10.4}{Extreme test with 115200 Baud at 8 MHz clock}{section.3.10}% 51
\BOOKMARK [2][-]{subsection.3.10.5}{Extreme test with 230400 Baud at 16 MHz clock rate}{section.3.10}% 52
\BOOKMARK [2][-]{subsection.3.10.6}{Summary and recommendations}{section.3.10}% 53
\BOOKMARK [1][-]{section.3.11}{Final remark}{chapter.3}% 54
\BOOKMARK [0][-]{chapter.4}{Data of the AVR 8-Bit Microcontrollers}{}% 55
\BOOKMARK [1][-]{section.4.1}{Signature Bytes and default Fuse setting}{chapter.4}% 56
\BOOKMARK [1][-]{section.4.2}{Layout of the fuses}{chapter.4}% 57
\BOOKMARK [1][-]{section.4.3}{Possible internal clock frequencies}{chapter.4}% 58
\BOOKMARK [0][-]{chapter.5}{Various USB to serial converter with Linux}{}% 59
\BOOKMARK [1][-]{section.5.1}{The CH340G and the CP2102 converter }{chapter.5}% 60
\BOOKMARK [1][-]{section.5.2}{The PL-2303 and the FT232R converter}{chapter.5}% 61
\BOOKMARK [1][-]{section.5.3}{The USB-serial converter with the ATmega16X2 software}{chapter.5}% 62
\BOOKMARK [1][-]{section.5.4}{Der Pololu USB AVR Programmer v2.1}{chapter.5}% 63
